@using System.Linq
@using Transformalize
@using Transformalize.Impl
@{
    var recipe_id_field = Model.Process.Entities.First().Fields.First(f=>f.Alias=="recipe_id");
    var sequence_field = Model.Process.Entities.First().Fields.First(f=>f.Alias=="sequence");
    var section_field = Model.Process.Entities.First().Fields.First(f=>f.Alias=="section");
    var quantity_field = Model.Process.Entities.First().Fields.First(f=>f.Alias=="quantity");
    var name_field = Model.Process.Entities.First().Fields.First(f=>f.Alias=="name");
    var uom_field = Model.Process.Entities.First().Fields.First(f=>f.Alias=="uom");
    var recipes = Model.Rows.Select(r => (int) r[recipe_id_field]).Distinct().ToArray();
}<ingredients>
    @for (var i = 0; i < recipes.Length; i++) {
        var recipe = recipes[i];
        var ingredients = Model.Rows.Where(r => (int)r[recipe_id_field] == recipe).OrderBy(r => (short)r[sequence_field]).ToArray();
        var sections = ingredients.Select(r => r[section_field].ToString()).Distinct().ToArray();
        <add>
            <id>@(recipe)</id>
            <content>
                @for (var y = 0; y < sections.Length; y++) {
                    var section = sections[y];
                    <h4>Ingredients@(section == string.Empty ? string.Empty : " for " + section)</h4>
                    <ul>
                        @foreach (var ingredient in ingredients.Where(r => r[section_field].ToString() == section)) {
                            <li itemprop="ingredient" itemscope="" itemtype="http://data-vocabulary.org/RecipeIngredient">
                                <span itemprop="amount">@(ingredient[quantity_field])<span class="uom"> @(ingredient[uom_field])</span></span>
                                <span itemprop="name"> @(ingredient[name_field])</span>
                            </li>
                        }
                    </ul>
                }
            </content>
        </add>
    }
</ingredients>
